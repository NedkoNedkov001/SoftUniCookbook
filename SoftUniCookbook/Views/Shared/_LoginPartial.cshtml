@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <!-- Sidebar user panel (optional) -->
        <div class="user-panel d-flex">
            <ul class="nav">
                <div class="image">
                    <img src="~/img/avatar5.png" class="img-circle elevation-2" alt="User Image">
                </div>
                <div class="info">
                    <a href="/Identity/Account/Manage/" class="d-block text-dark">@User.Identity?.Name</a>
                </div>

                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                    <button type="submit" class="nav-item btn btn-link text-dark">
                        <i class="fas fa-sign-out-alt"></i>
                        Sign Out
                    </button>
                </form>
                <ul>
        </div>

    }
    else
    {
        <li class="nav-item dropdown">
            <a class="nav-link" href="/Identity/Account/Login/">
                <i class="fas fa-sign-in-alt"></i>
                Sign In
            </a>
        </li>


        @*        <div class="user-panel d-flex">
    <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">

    <li class="nav-item">
    <a href="/Identity/Account/Login/" class="nav-link">
    <i class="fas fa-sign-in-alt"></i>
    <p>
    Sign In
    </p>
    </a>
    </li>
    </ul>
    </div>

    *@      }
</ul>
